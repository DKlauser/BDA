<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="13.0">
<procedure name="main">
<interface/>
<body>
<c></c>
<l>dev_update_off ()</l>
<l>I := 0</l>
<l>*read_image (ImageL, ImgPath + 'calib_distorted_l_' + I$'03d')</l>
<l>*read_image (ImageR, ImgPath + 'calib_distorted_r_' + I$'03d')</l>
<c>* Reopen the windows with an appropriate size</c>
<l>dev_close_window ()</l>
<l>CalibPath := 'C:/Users/Daniel Klauser/Documents/GitHub/BDA/Kalibrationsplatte/CalibData/'</l>
<l>*ImgPath := 'C:/Users/Daniel Klauser/Documents/GitHub/BDA/Kalibrationsplatte/Kalibbilder1/'</l>
<l>ImgPath := 'C:/Users/Daniel Klauser/Documents/GitHub/BDA/KalibSchr√§g40/AlleBilder/'</l>
<l>CaltabThickness := 0.006</l>
<c>*CameraParameter</c>
<c></c>
<l>Width := 2560</l>
<l>Height := 1920</l>
<c></c>
<l>focal := 0.0076</l>
<c></c>
<l>K1 := 0</l>
<l>K2 := 0</l>
<l>K3 := 0</l>
<l>P1 := 0</l>
<l>P2 := 0</l>
<c></c>
<c></c>
<l>Sx := 2.2e-006</l>
<l>Sy := 2.2e-006</l>
<c></c>
<c></c>
<c></c>
<l>* get_image_size (ImageL, WidthL, HeightL)</l>
<l>*get_image_size (ImageR, WidthR, HeightR)</l>
<l>dev_open_window (0, 0, 640, 480, 'black', WindowHandle1)</l>
<l>set_display_font (WindowHandle1, 14, 'mono', 'true', 'false')</l>
<l>dev_open_window (0, Width + 12, 640,480, 'black', WindowHandle2)</l>
<l>dev_open_window (0, Width + 12, 640,480, 'black', WindowHandle3)</l>
<l>dev_open_window (0, Width + 12, 640,480, 'black', WindowHandle4)</l>
<l>dev_open_window (0, Width + 12, 640,480, 'black', WindowHandle5)</l>
<c>* Set the initial values for the internal camera parameters</c>
<l>gen_cam_par_area_scan_polynomial (focal,K1,K2,K3,P1,P2, Sx, Sy, Width / 2.0, Height / 2.0, Width, Height, StartCamPar0)</l>
<l>StartCamPar1:= StartCamPar0</l>
<l>StartCamPar2:= StartCamPar0</l>
<l>StartCamPar3:= StartCamPar0</l>
<c>* Create a calibration data model in which all calibration data</c>
<c>* including the image coordinates of the calibration marks and</c>
<c>* the observation poses of the calibration plate will be</c>
<c>* accumulated</c>
<l>create_calib_data ('calibration_object', 4, 1, CalibDataID)</l>
<l>set_calib_data_cam_param (CalibDataID, 'all', [], StartCamPar0)</l>
<l>* set_calib_data_cam_param (CalibDataID, 1, [], StartCamPar1)</l>
<l>* set_calib_data_cam_param (CalibDataID, 2, [], StartCamPar2)</l>
<l>* set_calib_data_cam_param (CalibDataID, 3, [], StartCamPar3)</l>
<l>set_calib_data_calib_object (CalibDataID, 0, 'calplate_320mm.cpd')</l>
<c></c>
<l>for I := 0 to 5 by 1</l>
<c>    * Read and display the calibration images</c>
<l>    read_image (Image0, ImgPath + 'calib_1_' + I)</l>
<l>    read_image (Image1, ImgPath + 'calib_2_' + I)</l>
<l>    concat_obj(Image0,Image1,Imagec)</l>
<l>    read_image (Image2, ImgPath + 'calib_3_' + I)</l>
<l>    concat_obj(Imagec,Image1,Imagec)</l>
<l>    read_image (Image3, ImgPath + 'calib_4_' + I)</l>
<l>    concat_obj(Imagec,Image3,Imagec)</l>
<l>    dev_set_window (WindowHandle1)</l>
<l>    display_multi_view_stereo_images (Imagec, WindowHandle1)</l>
<c>    * Find the calibration plate and store observations</c>
<c>    * in the calibration data model</c>
<l>    find_calib_object (Image0, CalibDataID, 0, 0, I, [], [])</l>
<l>    find_calib_object (Image1, CalibDataID, 1, 0, I, [], [])</l>
<l>    find_calib_object (Image2, CalibDataID, 2, 0, I, [], [])</l>
<l>    find_calib_object (Image3, CalibDataID, 3, 0, I, [], [])</l>
<c></c>
<c>    * Visualize the extracted calibration marks and the</c>
<c>    * coordinate system defined by the estimated pose.</c>
<l>    visualize_observation_results (Image0, CalibDataID, 0, I, WindowHandle2)</l>
<l>    visualize_observation_results (Image1, CalibDataID, 1, I, WindowHandle3)</l>
<l>    visualize_observation_results (Image2, CalibDataID, 2, I, WindowHandle4)</l>
<l>    visualize_observation_results (Image3, CalibDataID, 3, I, WindowHandle5)</l>
<c>    </c>
<l>    wait_seconds (.1)</l>
<l>endfor</l>
<l>calibrate_cameras (CalibDataID, Error)</l>
<l>get_calib_data (CalibDataID, 'model', 'general', 'camera_setup_model', CameraSetupModelID)</l>
<c></c>
<l>get_calib_data (CalibDataID, 'model', 'general', 'reference_camera', RefCameraID)</l>
<l>get_calib_data (CalibDataID, 'calib_obj_pose', [0,0], 'pose', PoseCam0Indx0)</l>
<l>set_origin_pose (PoseCam0Indx0, 0, 0, CaltabThickness, ReferencePose)</l>
<l>set_camera_setup_param (CameraSetupModelID, 'general', 'coord_transf_pose', ReferencePose)</l>
<c>* -&gt; Camera parameters</c>
<l>get_calib_data (CalibDataID, 'camera', 0, 'params_labels', ParLabels)</l>
<l>get_camera_setup_param (CameraSetupModelID, 0, 'params', CamPar0)</l>
<l>get_camera_setup_param (CameraSetupModelID, 1, 'params', CamPar1)</l>
<l>get_camera_setup_param (CameraSetupModelID, 2, 'params', CamPar2)</l>
<l>get_camera_setup_param (CameraSetupModelID, 3, 'params', CamPar3)</l>
<c>* -&gt; Camera poses</c>
<l>get_calib_data (CalibDataID, 'camera', 0, 'pose_labels', PoseLabels)</l>
<l>get_camera_setup_param (CameraSetupModelID, 0, 'pose', CamPose0)</l>
<l>get_camera_setup_param (CameraSetupModelID, 1, 'pose', CamPose1)</l>
<l>get_camera_setup_param (CameraSetupModelID, 2, 'pose', CamPose2)</l>
<l>get_camera_setup_param (CameraSetupModelID, 3, 'pose', CamPose3)</l>
<c></c>
<l>file_exists ('four_camera_setup_model.csm', FileExists)</l>
<l>if (not FileExists)</l>
<l>    write_camera_setup_model (CameraSetupModelID, 'four_camera_setup_model.csm')</l>
<l>endif</l>
<c>* Store the results into files. Here, you can either store the</c>
<c>* individual results</c>
<l>write_cam_par (CamPar0, CalibPath + 'cam_0-param.dat')</l>
<l>write_cam_par (CamPar1, CalibPath + 'cam_1-param.dat')</l>
<l>write_cam_par (CamPar2, CalibPath + 'cam_2-param.dat')</l>
<l>write_cam_par (CamPar3, CalibPath + 'cam_3-param.dat')</l>
<l>write_pose (CamPose0, CalibPath +'poe0.dat')</l>
<l>write_pose (CamPose1, CalibPath +'pos1.dat')</l>
<l>write_pose (CamPose2, CalibPath +'pos2.dat')</l>
<l>write_pose (CamPose3, CalibPath +'poe3.dat')</l>
<c>* or you store the complete camera setup model and thus enable</c>
<c>* the later access to all contained parameters</c>
<l>get_calib_data (CalibDataID, 'model', 'general', 'camera_setup_model', CameraSetupModelID)</l>
<l>write_camera_setup_model (CameraSetupModelID, CalibPath +'stereo_camera_setup.csm')</l>
<c>* Generate the rectification maps</c>
<l>dev_set_window (WindowHandle1)</l>
<l>dev_set_window (WindowHandle2)</l>
<l>dev_set_window (WindowHandle3)</l>
<l>dev_set_window (WindowHandle4)</l>
<l>dev_set_window (WindowHandle5)</l>
<l>dev_clear_window ()</l>
<c></c>
<l>clear_calib_data (CalibDataID)</l>
<l>close_window (WindowHandle1)</l>
<l>close_window (WindowHandle2)</l>
<l>close_window (WindowHandle3)</l>
<l>close_window (WindowHandle4)</l>
<l>close_window (WindowHandle5)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="read_multi_view_stereo_images">
<interface>
<oo>
<par name="Images" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="ImagePath" base_type="ctrl" dimension="0"/>
<par name="ImagePrefix" base_type="ctrl" dimension="0"/>
<par name="SceneIndex" base_type="ctrl" dimension="0"/>
<par name="NumCamera" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c>* Read the images of the multi-view stereo setup</c>
<c>* </c>
<l>read_image (Image1, ImagePath + ImagePrefix + '0')</l>
<c>*scheibe Neu</c>
<l>scale_image (Image1, Images, 1.88889, -127)</l>
<c>*scheibe alt</c>
<l>*scale_image (Image1, Images,11.087, -1208)</l>
<l>for Index := 1 to NumCamera - 1 by 1</l>
<l>    read_image (Img, ImagePath + ImagePrefix + Index)</l>
<c>    *Block</c>
<l>*     scale_image (Img, ImageScaled1, 4.1129, -526)</l>
<c>    *scheibe neu</c>
<l>    scale_image (Img, ImageScaled1, 1.88889, -127)</l>
<c>    *Scheibe</c>
<l>    *scale_image (Img, ImageScaled1, 11.087, -1208)</l>
<l>    *concat_obj (Images, Img, Images)</l>
<l>    concat_obj (Images, ImageScaled1, Images)</l>
<c></c>
<c></c>
<l>endfor</l>
<l>return ()</l>
</body>
<docu id="read_multi_view_stereo_images">
<parameters>
<parameter id="ImagePath"/>
<parameter id="ImagePrefix"/>
<parameter id="Images"/>
<parameter id="NumCamera"/>
<parameter id="SceneIndex"/>
</parameters>
</docu>
</procedure>
<procedure name="display_multi_view_stereo_images">
<interface>
<io>
<par name="Images" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c>* Display the images of a multi-view stereo setup</c>
<c>* consisting of four cameras</c>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<c>* </c>
<l>count_obj (Images, NumImages)</l>
<l>if (NumImages != 4)</l>
<l>    disp_message (WindowHandle, 'Wrong number of images provided!', 'window', 12, 12, 'black', 'true')</l>
<l>    stop ()</l>
<l>endif</l>
<c>* </c>
<l>NumCols := 2</l>
<l>select_obj (Images, Img, 1)</l>
<l>get_image_size (Img, Width, Height)</l>
<l>tile_images (Images, TiledImage, NumCols, 'horizontal')</l>
<l>dev_set_part (0, 0, (2 * Height) - 1, (2 * Width) - 1)</l>
<l>dev_display (TiledImage)</l>
<c>* </c>
<l>for Index := 0 to NumImages - 1 by 1</l>
<l>    RowIdx := (Index / NumCols) + 1</l>
<l>    ColIdx := Index % NumCols</l>
<l>    disp_message (WindowHandle, 'Camera ' + Index, 'image', (RowIdx * Height) - 72, (ColIdx * Width) + 12, 'white', 'false')</l>
<l>endfor</l>
<l>return ()</l>
<c>* </c>
</body>
<docu id="display_multi_view_stereo_images">
<parameters>
<parameter id="Images"/>
<parameter id="WindowHandle"/>
</parameters>
</docu>
</procedure>
<procedure name="init_camera_setup">
<interface>
<oc>
<par name="CameraSetupModelID" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c></c>
<c>*IIWA AUF 45Cm ohne Winkel</c>
<c>* Z Trans zuerst auf .- setzten.</c>
<c>*Cam/Pose1</c>
<l>* CamParam0 := [0.00791499,-955.21,2.19472e-006,2.2e-006,1299.54,966.949,2560,1920]</l>
<l>* Pose0 := [-0.0553737,0.0584195,-0.481797,0.257076,359.363,178.425,0]</l>
<c>* CAM/Pose2</c>
<l>* CamParam1 := [0.00766424,-989.386,2.19187e-006,2.2e-006,1314.85,972.524,2560,1920]</l>
<l>* Pose1 := [-0.0587137,-0.0449632,-0.466432,359.676,359.481,178.37,0]</l>
<c>* CAM/POSE 3</c>
<l>* CamParam2 := [0.00773208,-979.919,2.19287e-006,2.2e-006,1312.27,967.687,2560,1920]</l>
<l>* Pose2 := [0.0438271,-0.0456287,-0.471678,359.654,359.149,178.37,0]</l>
<c>* CAM/POSE4</c>
<l>* CamParam3 := [0.00782266,-1012.26,2.19298e-006,2.2e-006,1294.55,973.609,2560,1920]</l>
<l>* Pose3 := [0.0475012,0.0566594,-0.477529,0.228425,359.184,178.399,0]</l>
<c></c>
<c>*CameraCalib 365mm</c>
<c>*3</c>
<l>CamParam3 := [0.00771128,-1222.1,2.20126e-006,2.2e-006,1320.38,1018.23,2560,1920]</l>
<l>Pose3 := [0.02785,0.0258176,-0.361156,359.873,359.494,179.099,0]</l>
<c>*2</c>
<l>CamParam2 := [0.00767229,-1126.93,2.20371e-006,2.2e-006,1321.14,1012.56,2560,1920]</l>
<l>Pose2 := [0.0269667,-0.0358865,-0.358598,359.765,359.402,179.062,0]</l>
<c>*1</c>
<l>CamParam1 := [0.00774252,-868.79,2.20327e-006,2.2e-006,1297.74,1011.09,2560,1920]</l>
<l>Pose1 := [-0.032727,-0.035178,-0.362,359.834,359.8,179.089,0]</l>
<c>*0</c>
<l>CamParam0 := [0.00776004,-811.837,2.20124e-006,2.2e-006,1301.98,1036.19,2560,1920]</l>
<l>Pose0 := [-0.0324163,0.0246055,-0.3634,0.305953,0.0558555,179.118,0]</l>
<c></c>
<c></c>
<c>*WEBCAM AUF 43cm</c>
<c>*Parameter[‚Äôarea_scan_polynomial‚Äô, Focus, K1, K2, K3, P1, P2, Sx, Sy, Cx, Cy, ImageWidth, ImageHeight]</c>
<l>* CamParam0 := [0.0031218,-11216.1,2.32971e+009,-7.31669e+013,-0.209692,-0.296492,2.19145e-006,2.2e-006,987.614,598.92,1920,1080]</l>
<l>* CamParam1 :=[0.00318205,-11303.8,2.38186e+009,-7.92096e+013,-0.261845,-0.340565,2.1935e-006,2.2e-006,987.505,599.184,1920,1080]</l>
<l>* CamParam2 :=  [0.00309938,-11319.5,2.35269e+009,-7.8911e+013,0.129894,-0.0435177,2.19199e-006,2.2e-006,991.39,595.654,1920,1080]</l>
<l>* CamParam3 := [0.00315229,-11748.2,2.49474e+009,-7.97289e+013,-0.177329,-0.188707,2.19236e-006,2.2e-006,992.387,595.088,1920,1080]</l>
<c></c>
<l>* Pose3 := [0.10743,-0.0404686,-0.434389,5.15003,0.313953,358.301,0]</l>
<l>* Pose2 := [-0.098926,-0.021663,-0.434532,1.38859,359.958,358.814,0]</l>
<l>* Pose1 := [0.097408,-0.0103364,-0.444745,345.922,0.234055,179.507,0]</l>
<l>* Pose0 :=[-0.092342,-0.0460974,-0.431712,350.684,0.293669,179.835,0]</l>
<c>* </c>
<c>* Create a camera setup model and set its parameters</c>
<l>create_camera_setup_model (4, CameraSetupModelID)</l>
<c>* </c>
<c></c>
<c>*Parameter [xtrans,ytrany,ztrans,xrot,yrot,zrot,0]</c>
<l>set_camera_setup_cam_param (CameraSetupModelID, 0, 'area_scan_division', CamParam0, Pose0)</l>
<l>set_camera_setup_cam_param (CameraSetupModelID, 1, 'area_scan_division', CamParam1, Pose1)</l>
<l>set_camera_setup_cam_param (CameraSetupModelID, 2, 'area_scan_division', CamParam2, Pose2)</l>
<l>set_camera_setup_cam_param (CameraSetupModelID, 3, 'area_scan_division', CamParam3, Pose3)</l>
<l>return ()</l>
<c></c>
<c></c>
<c></c>
<c>**Trys</c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c>* </c>
<c>* Define the internal and external camera parameters</c>
<l>* CamParam0 := [0.00850373,4008.61,-2.95892e+008,2.37315e+013,0.139749,-0.00367983,5.99965e-006,6e-006,362.715,236.769,752,480]</l>
<l>* CamParam1 := [0.00854019,3445.26,-1.18075e+008,6.40715e+012,-0.0527818,-0.192439,5.99894e-006,6e-006,406.13,254.15,752,480]</l>
<l>* CamParam2 := [0.00852569,3938.44,-2.75967e+008,2.27295e+013,0.231091,0.193667,6.00001e-006,6e-006,367.159,242.477,752,480]</l>
<l>* CamParam3 := [0.00853794,3793.19,-3.49193e+008,3.9611e+013,0.0264028,0.147156,6.00169e-006,6e-006,397.066,224.671,752,480]</l>
<c>* </c>
<l>* Pose0 := [0.0496073,0.0280127,-0.431281,3.5466,354.117,179.758,0]</l>
<l>* Pose1 := [0.0495484,-0.0297644,-0.429654,355.333,354.014,359.147,0]</l>
<l>* Pose2 := [-0.0411315,-0.0294687,-0.427325,355.519,4.45356,359.876,0]</l>
<l>* Pose3 := [-0.0414501,0.0288074,-0.429167,2.94179,4.59538,179.173,0]</l>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c></c>
<c>*IIWA auf 45 cm mit winkel 10¬∞</c>
<c>*0</c>
<l>* CamParam0:= [0.00773331,1635.84,-1.14728e+008,6.28377e+012,0.374646,-0.0221808,2.19058e-006,2.2e-006,1258.46,986.36,2560,1920]</l>
<l>* Pose0 := [0.0133878,-0.0123234,-0.475275,6.24346,5.99036,358.636,0]</l>
<c>*1</c>
<l>* CamParam1 := [0.0075598,1558.22,-9.65061e+007,5.28054e+012,0.406553,0.148962,2.19087e-006,2.2e-006,1282.88,972.712,2560,1920]</l>
<l>* Pose1 := [0.0100763,-0.0109718,-0.465767,353.794,5.94434,359.893,0]</l>
<c>*2</c>
<l>* CamParam2 := [0.00772714,1425.36,-6.85897e+007,3.48905e+012,0.205745,0.139494,2.19085e-006,2.2e-006,1300.88,942.815,2560,1920]</l>
<l>* Pose2 := [0.00688544,-0.0067534,-0.477912,353.344,353.501,358.533,0]</l>
<c>*3</c>
<l>* CamParam3 := [0.00761183,1524.93,-9.31844e+007,5.14651e+012,0.132659,-0.126585,2.19078e-006,2.2e-006,1288.05,967.991,2560,1920]</l>
<l>* Pose3 := [0.0084914,-0.00924695,-0.469512,5.95224,353.397,359.942,0]</l>
<c></c>
<c></c>
</body>
<docu id="init_camera_setup">
<parameters>
<parameter id="CameraSetupModelID"/>
</parameters>
</docu>
</procedure>
<procedure name="visualize_observation_results">
<interface>
<io>
<par name="Image" base_type="iconic" dimension="0"/>
</io>
<ic>
<par name="CalibDataID" base_type="ctrl" dimension="0"/>
<par name="CameraIdx" base_type="ctrl" dimension="0"/>
<par name="PoseIdx" base_type="ctrl" dimension="0"/>
<par name="WindowHandle" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>get_calib_data_observ_points (CalibDataID, CameraIdx, 0, PoseIdx, RCoord, CCoord, Index, Pose)</l>
<l>get_calib_data (CalibDataID, 'camera', CameraIdx, 'init_params', CamPar)</l>
<c>* </c>
<l>dev_set_window (WindowHandle)</l>
<l>dev_display (Image)</l>
<l>dev_set_color ('yellow')</l>
<l>gen_cross_contour_xld (Cross, RCoord, CCoord, 6, 0.785398)</l>
<l>dev_display (Cross)</l>
<l>ArrowLength := 0.02</l>
<l>ArrowX_CPCS := [0,ArrowLength,0]</l>
<l>ArrowY_CPCS := [0,0,ArrowLength]</l>
<l>ArrowZ_CPCS := [0,0,0]</l>
<l>pose_to_hom_mat3d (Pose, HomMat_CPCS_CCS)</l>
<l>affine_trans_point_3d (HomMat_CPCS_CCS, ArrowX_CPCS, ArrowY_CPCS, ArrowZ_CPCS, ArrowX_CCS, ArrowY_CCS, ArrowZ_CCS)</l>
<l>project_3d_point (ArrowX_CCS, ArrowY_CCS, ArrowZ_CCS, CamPar, ArrowRow, ArrowColumn)</l>
<l>dev_set_color ('green')</l>
<l>gen_arrow_contour_xld (ArrowX, ArrowRow[0], ArrowColumn[0], ArrowRow[1], ArrowColumn[1], 5, 5)</l>
<l>gen_arrow_contour_xld (ArrowY, ArrowRow[0], ArrowColumn[0], ArrowRow[2], ArrowColumn[2], 5, 5)</l>
<l>dev_display (ArrowX)</l>
<l>dev_display (ArrowY)</l>
<l>set_tposition (WindowHandle, ArrowRow[1], ArrowColumn[1])</l>
<l>write_string (WindowHandle, 'x')</l>
<l>set_tposition (WindowHandle, ArrowRow[2], ArrowColumn[2])</l>
<l>write_string (WindowHandle, 'y')</l>
<l>dev_set_color ('white')</l>
<l>return ()</l>
</body>
<docu id="visualize_observation_results">
<parameters>
<parameter id="CalibDataID"/>
<parameter id="CameraIdx"/>
<parameter id="Image"/>
<parameter id="PoseIdx"/>
<parameter id="WindowHandle"/>
</parameters>
</docu>
</procedure>
</hdevelop>
